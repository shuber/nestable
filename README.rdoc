= nestable

Allows you to nest ActiveRecord records with various theories like tree, set, path, etc.

What makes it different than other nesting gems/plugins?

It aims to provide a standard interface to all nesting related methods no matter what theory you decide to use. 
Some theories are better for read-heavy applications and others are better for write-heavy ones but you always want 
the same information - ancestors, children, descendants, siblings, etc. Your application code shouldn't have to change 
just because you realized that you're better off storing records as a set instead of a tree.


Requires ActiveRecord >= 2.1


== Installation

  gem install shuber-nestable --source http://gems.github.com
  OR
  script/plugin install git://github.com/shuber/nestable.git


== Usage

Simply call <tt>nestable</tt> in your model and pass the <tt>:theory</tt> that you want to use along with any options related to it (see Theories below).

  class Category < ActiveRecord::Base
    nestable :theory => :tree, :scope => :site_id
  end


== Theories

Take a look at the documentation at http://rdoc.info/projects/shuber/nestable for more information about each theory

* :tree (Nestable::Tree) <b>default</b>
* :path (Nestable::Path)


== Contact

Problems, comments, and suggestions all welcome: shuber@huberry.com